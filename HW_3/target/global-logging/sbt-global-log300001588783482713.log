[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addDefaultCommands), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addDefaultCommands, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(initialize), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(initialize, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addPluginSbtFile="""/private/var/folders/kk/l1f5jw9n0hv45nw_rrhz85th0000gn/T/idea.sbt"""), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addPluginSbtFile="""/private/var/folders/kk/l1f5jw9n0hv45nw_rrhz85th0000gn/T/idea.sbt""", None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(boot, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(writeSbtVersion, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_241)[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: plugins took 70.098709ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: defsScala took 1.200125ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/kamilla/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/kamilla/.sbt/1.0/plugins, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 28.479375 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.resolveProject(global-plugins) took 62.829833ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/kamilla/.sbt/1.0/plugins, plugins: List(<none>))) took 118.824ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/kamilla/.sbt/1.0/plugins, returning: (global-plugins)[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: loadedProjectsRaw took 137.610583ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: cleanEvalClasses took 0.441167ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit(file:/Users/kamilla/.sbt/1.0/plugins/, ...) took 218.421792ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: load took 639.884917ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: resolveProjects took 15.957541ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: finalTransforms took 161.490042ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: config.delegates took 15.632ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: Def.make(settings)... took 1227.852083ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: structureIndex took 220.235959ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: mkStreams took 1.320584ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading global plugins from /Users/kamilla/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.defaultLoad until apply took 7859.747875ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 62.994625ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.002625ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/kamilla/Downloads/linear-regression-scala-master/project[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadUnit: mkEval took 15.38375ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/kamilla/Downloads/linear-regression-scala-master/project, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 7.527 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project linear-regression-scala-master-build from idea.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(linear-regression-scala-master-build) took 14.353792ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id linear-regression-scala-master-build, base: /Users/kamilla/Downloads/linear-regression-scala-master/project, plugins: List(<none>))) took 24.782791ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/kamilla/Downloads/linear-regression-scala-master/project, returning: (linear-regression-scala-master-build)[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 4349.548542ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 9.879542ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/Users/kamilla/Downloads/linear-regression-scala-master/project/, ...) took 4425.450291ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 4430.612917ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 0.60025ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 29.227041ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 2.699375ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 336.316083ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 61.598583ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 0.002458ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /Users/kamilla/Downloads/linear-regression-scala-master/project[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[33mwarn[0m] [0m[0mUnrecognized repository Scala Plugin Bundled Repository, ignoring it[0m
[0m[[0m[33mwarn[0m] [0m[0mUnrecognized repository Scala Plugin Bundled Repository, ignoring it[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: plugins took 7797.897375ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: defsScala took 0.003291ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/kamilla/Downloads/linear-regression-scala-master[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: mkEval took 2.411167ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/kamilla/Downloads/linear-regression-scala-master, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 4.022583 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project linear-regression-scala-master from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.resolveProject(linear-regression-scala-master) took 25.771083ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadTransitive: finalizeProject(Project(id linear-regression-scala-master, base: /Users/kamilla/Downloads/linear-regression-scala-master, plugins: List(<none>))) took 31.187958ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/kamilla/Downloads/linear-regression-scala-master, returning: (linear-regression-scala-master)[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: loadedProjectsRaw took 3183.48275ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: cleanEvalClasses took 4.288083ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.loadUnit(file:/Users/kamilla/Downloads/linear-regression-scala-master/, ...) took 10988.10325ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: load took 10995.51425ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: resolveProjects took 0.246625ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: finalTransforms took 39.737125ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: config.delegates took 0.715583ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: Def.make(settings)... took 247.931833ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: structureIndex took 32.870125ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: mkStreams took 0.002209ms[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to made_example (in build file:/Users/kamilla/Downloads/linear-regression-scala-master/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(notifyUsersAboutShell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(iflast shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(; set ideaPort in Global := 49171 ; idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(set ideaPort in Global := 49171, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mDefining Global / ideaPort[0m
[0m[[0m[0minfo[0m] [0m[0mThe new value will be used by Compile / compile, Test / compile[0m
[0m[[0m[0mdebug[0m] [0m[0mDefining [0m
[0m[[0m[0mdebug[0m] [0m[0m	Global / ideaPort[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mThe new value will be used by [0m
[0m[[0m[0mdebug[0m] [0m[0m	Compile / compile[0m
[0m[[0m[0mdebug[0m] [0m[0m	Test / compile[0m
[0m[[0m[0minfo[0m] [0m[0mReapplying settings...[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to made_example (in build file:/Users/kamilla/Downloads/linear-regression-scala-master/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
